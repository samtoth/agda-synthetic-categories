\date{2025-02-26}
\title{Function extensionality}

\import{stt-macros}

\p{
Function extensionality says that any homotopy between functions can be made into an equality between functions.

Or equivalently, that #{\textrm{happly} : f = g \to f \sim g} is an equivalence.
}

% ```agda
\agda{

open import foundations.universe
open import foundations.Functions
open import foundations.CoherentIsomorphism
open import foundations.Identity
open import foundations.Homotopy

module foundations.FunExt where


FunExt : (𝓥 : Level) → Typeω
FunExt 𝓥 = ∀ {𝓤} {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a}
           → is-equiv (happly {f = f} {g})


FunExtGlobal : Typeω
FunExtGlobal = ∀ {𝓥} → FunExt 𝓥

funext-≃ : ∀ {𝓤 𝓥} (_ : FunExt 𝓥) → {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a} → (f ＝ g) ≃ (f ~ g)
funext-≃ fe = happly , fe

funext : ∀ {𝓤 𝓥} (_ : FunExt 𝓥) → {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a} → f ~ g → f ＝ g
funext FE p = is-equiv.bwd FE p
}
% ```
