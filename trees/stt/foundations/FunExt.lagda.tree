\date{2025-02-26}
\title{Function extensionality}

\import{stt-macros}

\p{
Function extensionality says that any homotopy between functions can be made into an equality between functions.

Or equivalently, that #{\textrm{happly} : f = g \to f \sim g} is an equivalence.
}

% ```agda
\agda{

open import foundations.universe
open import foundations.Functions
open import foundations.CoherentIsomorphism
open import foundations.Identity
open import foundations.DependentIdentity
open import foundations.Homotopy
open import foundations.Sigma
open import foundations.DependentHomotopy

module foundations.FunExt where


FunExt : (𝓤 𝓥 : Level) → Type (lsuc (𝓤 ⊔ 𝓥))
FunExt 𝓤 𝓥 = ∀ {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a}
           → is-equiv (happly {f = f} {g})


FunExtGlobal : Typeω
FunExtGlobal = ∀ {𝓤 𝓥} → FunExt 𝓤 𝓥

module WithFunExt {𝓤 𝓥} (fe : FunExt 𝓤 𝓥) where
  funext≃ : ∀ {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a} → (f ＝ g) ≃ (f ~ g)
  funext≃ = happly , fe

  funext→ : ∀ {A : Type 𝓤} {B : A → Type 𝓥} {f g : (a : A) → B a} → f ~ g → f ＝ g
  funext→ p = is-equiv.bwd fe p

  funext-ind : ∀ {𝓦} {A : Type 𝓤} {B : A → Type 𝓥} {f : (a : A) → B a}
               → (M : (g : (a : A) → B a) → f ~ g → Type 𝓦) → M f ~refl
               → ∀ (g : (a : A) → B a) (h : f ~ g) → M g h
  funext-ind M mrfl g h = tr (M g) (is-equiv.ε fe h) (J (λ g p → M g (happly p)) mrfl (funext→ h))

  funext-refl : ∀ {A : Type 𝓤} {B : A → Type 𝓥} {f : Π A B} → funext→ (~refl) ＝ refl {a = f}
  funext-refl = is-equiv.η fe refl


module WithFunExtGlobal (fe : FunExtGlobal) where
  module FE {𝓤} {𝓥} = WithFunExt (fe {𝓤} {𝓥})
  open FE public


  Π-path : ∀ {𝓤 𝓥} {A : Type 𝓤} {B C : A → Type 𝓥}
           → B ＝ C → ((a : A) → B a) ＝ ((a : A) → C a)
  Π-path p = ap (λ f → (a : _) → f a) p

  funextᵈ→ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B C : A → Type 𝓥} 
            {P : B ~ C}
            {f : (a : A) → B a}
            {g : (a : A) → C a}
            → f ~[ P ] g → f ＝[ ap (λ f → (a : A) → f a) (funext→ P)  ] g
  funextᵈ→ {A = A} {P = P} {f} = funext-ind (λ C P → ∀ {g : (a : A) → C a} → f ~[ P ] g → f ＝[  Π-path (funext→ P) ] g)
                                 (funext-ind (λ g h → f ＝[ Π-path (funext→ ~refl) ] g) (IdP-refl (ap Π-path funext-refl)) _) _ P 
                                 

}
% ```
