\date{2025-03-03}

\title{Equivalences of (sub)singletons}
\tag{agda}

\import{stt-macros}


% ```agda
\agda{
module foundations.EquivOfSingleton where

open import foundations.universe
open import foundations.Singleton
open import foundations.FunctionInverses
open import foundations.Sigma
open import foundations.Identity
open import foundations.CoherentIsomorphism
open import foundations.QuasiIsomorphism
}
% ```


\subtree[stt-000W]{
\taxon{theorem}
\title{Any map from a singleton to a subsingleton is an equivalence}

\subtree{
\taxon{lemma}

\p{
Any map with a singleton domain has a retract.
}

% ```agda
\agda{
retract←singleton-dom : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥} (a-sngl : is-singleton A) (f : A → B) → retract f
retract←singleton-dom sngl f .fst _ = sngl .centre
retract←singleton-dom sngl f .snd a = sngl .central a
}
% ```
}
}


% ```agda
\agda{
is-equiv←single-dom←prop-cod : ∀ {𝓤 𝓥} {A : Type 𝓤} (a-sngl : is-singleton A)
                         {B : Type 𝓥} (b-prop : is-subsingleton B)
                         → (f : A → B) → is-equiv f
is-equiv←single-dom←prop-cod sa sb f
  = is-equiv←qiso ( ret .fst , ret .snd , λ _ → sb _ _) where
    ret = retract←singleton-dom sa f
}
% ```
