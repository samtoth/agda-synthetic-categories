\date{2025-03-06}
\author{samueltoth}
\title{The type theoretic theorem of choice}

% HoTT 2.15.7

\import{stt-macros}

% ```agda
\agda{
module foundations.TheoremOfChoice where

open import foundations.universe
open import foundations.Sigma
open import foundations.QuasiIsomorphism
open import foundations.CoherentIsomorphism
open import foundations.FunctionInverses
open import foundations.Functions
open import foundations.Identity
}
% ```

##{
\Pi_{(x : X)} \Sigma_{(a : A(x))} P(x, a) \to \Sigma_{(g : \Pi_{(x : X)} A(x))} \Pi_{(x : X)} P(x, g(x))
}

% ```agda
\agda{

Σ-Π-swap : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} (A : X → Type 𝓥) (P : (x : X) → A x → Type 𝓦)
         → ((x : X) → Σ[ a ∶ A x ] P x a) → (Σ[ f ∶ ((x : X) → A x) ] ∀ (x : X) → P x (f x)) 
Σ-Π-swap _ _ f = (fst ∘ f , snd ∘ f)


Σ-Π-swap-is-equiv : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} {A : X → Type 𝓥} {P : (x : X) → A x → Type 𝓦}
         → is-equiv (Σ-Π-swap A P)
Σ-Π-swap-is-equiv = qiso→is-equiv lem where
  lem : quasi-iso (Σ-Π-swap _ _)
  lem .fst (f , g) x = (f x , g x)
  lem .snd .fst _ = refl
  lem .snd .snd _ = refl

Σ-Π-swap≃ : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} (A : X → Type 𝓥) (P : (x : X) → A x → Type 𝓦)
         → ((x : X) → Σ[ a ∶ A x ] P x a) ≃ (Σ[ f ∶ ((x : X) → A x) ] ∀ (x : X) → P x (f x)) 
Σ-Π-swap≃ A P = Σ-Π-swap A P , Σ-Π-swap-is-equiv 

}
% ```
