\date{2025-03-06}
\author{samueltoth}
\title{The type theoretic theorem of choice}

% HoTT 2.15.7

\import{stt-macros}

% ```agda
\agda{
module Foundations.TheoremOfChoice where

open import Foundations.Universes
open import Foundations.Sigma
open import Foundations.QuasiIsomorphism
open import Foundations.CoherentIsomorphism
open import Foundations.FunctionInverses
open import Foundations.Functions
open import Foundations.Identity
}
% ```

\tag{TODO}
\meta{HoTT}{2.15.7}

##{
\Pi_{(x : X)} \Sigma_{(a : A(x))} P(x, a) \to \Sigma_{(g : \Pi_{(x : X)} A(x))} \Pi_{(x : X)} P(x, g(x))
}

% ```agda
\agda{

Σ-Π-swap : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} (A : X → Type 𝓥) (P : (x : X) → A x → Type 𝓦)
         → ((x : X) → Σ[ a ∶ A x ] P x a) → (Σ[ f ∶ ((x : X) → A x) ] ∀ (x : X) → P x (f x))
Σ-Π-swap _ _ f = (fst ∘ f , snd ∘ f)


Σ-Π-swap-is-equiv : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} {A : X → Type 𝓥} {P : (x : X) → A x → Type 𝓦}
         → is-equiv (Σ-Π-swap A P)
Σ-Π-swap-is-equiv = is-equiv←qiso lem where
  lem : quasi-iso (Σ-Π-swap _ _)
  lem .fst (f , g) x = (f x , g x)
  lem .snd .fst _ = refl
  lem .snd .snd _ = refl

Σ-Π-swap≃ : ∀ {𝓤 𝓥 𝓦} {X : Type 𝓤} (A : X → Type 𝓥) (P : (x : X) → A x → Type 𝓦)
         → ((x : X) → Σ[ a ∶ A x ] P x a) ≃ (Σ[ f ∶ ((x : X) → A x) ] ∀ (x : X) → P x (f x))
Σ-Π-swap≃ A P = mk≃ (Σ-Π-swap A P) Σ-Π-swap-is-equiv 

}
% ```


\subtree[stt-0061]{
\date{2025-06-19}
\title{Sections from inhabited fibres}
\taxon{corolary}

\p{Suppose you have a map #{f : A \to B}, with #{\Pi_{b : B}\fibre{f}{B}},
then #{f} has a section. In fact, these types are equivelent.}


%```agda
\agda{
section←fibres : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥}
                 → (f : A → B)
                 → ((b : B) → fibre f b)
                 → section f
section←fibres f = Σ-Π-swap _ _

section≃fibres :  ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥}
                 → (f : A → B)
                 → ((b : B) → fibre f b)
                 ≃ section f
section≃fibres f = Σ-Π-swap≃ _ _
}
%```
}
