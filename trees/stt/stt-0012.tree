\date{2025-03-06}
\title{Naming convensions}
\author{samueltoth}


\p{
Names should generally be in kebab-case.

If a descriptive or common name exists for a theorem, then use that, otherwise
the name can be informed from the type: Conclusion should go to the left of premises, seperated by
a unicode left arrow ←. This matches the order of function application/composition and makes reading the code easier.
other defined mixfix operations e.g. ＝, ≃ or ¬ may also be used in place of a '-'.
}

\p{
Note that the leftarrow (←) associates to the left, so that we write multiple premises in curried form. For example
\code{is-singleton←inhabited←is-prop} would be the theorem that inhabited propositions are singleton types.
}


\p{
We are strict in keeping to the convention that propositions are written with the prefix \code{is}, for example
\code{is-singleton}.

This means that some types that are proposition like aren't written in the way it is tempting to write them - most notably this
includes the data of a functions inverse, called a [quasi-iso(morphism)](QuasiIsomorphism.lagda). When we make this notion
[coherent](CoherentIsomorphism.lagda), it beomes a proposition, and so is written \code{is-equiv}.

}