\date{2025-07-30}
\title{Sequential Colimits}
\taxon{module}
\meta{module}{Foundations.SequentialColimits}
\author{samueltoth}
\import{stt-macros}

%```agda
\agda{
module Foundations.SequentialColimits where

open import Foundations.Universes
open import Foundations.Sigma
open import Foundations.Nat
open import Foundations.Functions
open import Foundations.TypeSequence
open import Foundations.Homotopy
open import Foundations.CoherentIsomorphism
}
%```


\subtree[stt-008A]{
\title{Sequential colimit}
\taxon{definition}

\p{Given an increasing [sequence of types](stt-0085) #{S}, and a cocone
#{C} under it, we say #{C} is the sequential colimit of #{S} if any
map #{S \to \Delta_Q} factors through #{\Delta_C}. This property
can be stated by asking that the canonical map
#{(C \to Q) \to \rm{Cocone(S,Q)}} is an equivalence.}

%```agda
\agda{
seq-cocone-map : ∀ {𝓤 𝓥 𝓦} {S : Incr-seq 𝓤}
                   {C : Type 𝓥} (CC : Cocone-seq S C)
                   {Q : Type 𝓦}
                 → (C → Q) → Cocone-seq S Q
seq-cocone-map CC f = mk-cocone-seq (f ∘ ι) (f ◂ comm) where
  open Cocone-seq CC

is-seq-colim : ∀ {𝓤 𝓥} (S : Incr-seq 𝓤) {C : Type 𝓥}
                 (CC : Cocone-seq S C) → Typeω
is-seq-colim S CC = ∀ {𝓠} (Q : Type 𝓠)
                    → is-equiv (seq-cocone-map CC {Q})
}
%```
}
