\date{2025-02-24}
\taxon{theorem}
\title{Equivalences have singleton fibres}

\import{stt-macros}

% ```agda
\agda{
module foundations.EquivContrFibre where

open import foundations.universe
open import foundations.CoherentIsomorphism
open import foundations.Functions
open import foundations.Singleton
open import foundations.Sigma
open import foundations.SigmaPath
open import foundations.FibrePath
open import foundations.Identity
open import foundations.DependentIdentity
}
% ```

\p{



}

% ```agda
\agda{
is-equiv→is-contr-map : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥} {f : A → B} → is-equiv f → is-contr-map f
is-equiv→is-contr-map {f = f} eq b = mk-contr (bwd b , η b) contr where
  open is-equiv eq
  lem : ∀ {a p} → IdP (λ a₁ → f a₁ ＝ b) p (sym (ε a) ∙ ap bwd p) (η b)
  lem {a} {p} = tr (sym (ε a) ∙ ap bwd p) p ＝⟨ {!fibre-path!} ⟩
                {!!}                        ＝⟨ {!!} ⟩ 
                η b                         ∎

  contr : (x : fibre f b) → x ＝ (bwd b , η b)
  contr (a , p) = Σ-path→ (sym (ε a) ∙ ap bwd p , lem)


}
% ```
