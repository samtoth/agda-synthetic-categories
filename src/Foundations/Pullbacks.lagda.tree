\date{2025-04-22}
\title{Pullbacks}
\author{samueltoth}
\taxon{module}
\meta{module}{\startverb Foundations.Pullbacks \stopverb}

\import{stt-macros}

% ```agda
\agda{
module Foundations.Pullbacks where

open import Foundations.Universes
open import Foundations.Span
open import Foundations.Functions
open import Foundations.Homotopy
open import Foundations.CoherentIsomorphism
open import Foundations.Sigma
open import Foundations.Identity
open import Foundations.Unit
}
% ```

\subtree[stt-003I]{
\taxon{defintition}
\title{is-pullback}
\meta{defines}{\startverb ["cone-map", "is-pullback", "is-pullbackω"] \stopverb}

\p{
  Given a cospan of types #{B \xrightarrow{f} A \xleftarrow{g} C}, we say that a cone
  over the cospan is a pushout when it is the \em{universal} such cone. Spelling this
  out as a diagram:
}

  \quiver{
  \begin{tikzcd}
        Q \\
	& D && C \\
	\\
	& B && A
	\arrow[dashed, from=1-1, to=2-2]
	\arrow["p", bend left, from=1-1, to=2-4]
	\arrow["q"', bend right, from=1-1, to=4-2]
	\arrow[from=2-2, to=2-4]
	\arrow[from=2-2, to=4-2]
	\arrow["\lrcorner"{anchor=center, pos=0.125}, draw=none, from=2-2, to=4-4]
	\arrow["g", from=2-4, to=4-4]
	\arrow["f"', from=4-2, to=4-4]
  \end{tikzcd}
  }

  \p{Given a particular span #{S}, #{S}-cone with centre #{D} and any other type #{Q},
     we can define a map #{(Q \to D) \to \textrm{Cone}_S(Q)} by post-composition.}

% ```agda
\agda{
cone-map : ∀ {𝓤 𝓥 𝓦 𝓛 𝓠} (S : Cospan 𝓤 𝓥 𝓦)
           → {D : Type 𝓛} → (C : Cone S D)
           → {Q : Type 𝓠} → (Q → D)
           → Cone S Q
cone-map S C f = mk-cone (i ∘ f) (j ∘ f) (filler ▸ f) where open Cone C
}
% ```

% ```agda
\agda{
is-pullback : ∀ {𝓤 𝓥 𝓦 𝓜} (S : Cospan 𝓤 𝓥 𝓦)
           → {D : Type 𝓜} → (C : Cone S D)
           → (𝓠 : Level)
           →  Type (lsuc (𝓤 ⊔ 𝓥 ⊔ 𝓦 ⊔ 𝓠) ⊔ 𝓜)
is-pullback S C 𝓠 = ∀ {Q : Type 𝓠} → is-equiv (cone-map S C {Q})

is-pullbackω : ∀ {𝓤 𝓥 𝓦 𝓛} (S : Cospan 𝓤 𝓥 𝓦)
               → {D : Type 𝓛} → (C : Cone S D)
               → Typeω
is-pullbackω S C = ∀ {𝓠} (Q : Type 𝓠) → is-equiv (cone-map S C {Q})
}
% ```
}



\subtree[stt-006K]{
\date{2025-06-26}
\title{Identity types are pullbacks}
\taxon{example}

%```agda
\agda{
Identity-pullback : ∀ {𝓤} {A : Type 𝓤} {x y : A}
                    → is-pullbackω (mk-cospan _ (const A 𝟙 x) (const A 𝟙 y))
                                   (mk-cone ! ! id)
Identity-pullback Q = is-equiv←qiso λ where
  .fst (mk-cone i j filler) q → filler q
  .snd .fst a → refl
  .snd .snd (mk-cone i j filler) → refl
}
%```
}
