\date{2025-05-07}
\title{Fibrant replacement}
\taxon{module}
\meta{module}{\startverb foundations.FibrantReplacement \stopverb}

\import{stt-macros}

% ```agda
\agda{
module foundations.FibrantReplacement where

open import foundations.Universes
open import foundations.Functions
open import foundations.Sigma
open import foundations.Identity
open import foundations.QuasiIsomorphism
open import foundations.CoherentIsomorphism
}
% ```

\subtree[stt-003Q]{
\taxon{definition}
\title{Fibrant Replacement}

\p{Given a type #{B}, and a map #{p : E \to B}, we sometimes say that the type
#{\Sigma_{(b : B)} \textrm{fib}_{p}(b)} is called the
\em{fibrant replacement}.}
}

\subtree[stt-003S]{
\taxon{theorem}

\p{The fibrant replacment of #{p : E \to B} is equivalent to the base type #{B}.
(hence the name fibrant replacement)
}

% ```agda
\agda{
base←total-fibre : ∀ {𝓤} {B : Type 𝓤}
                     {𝓥} {A : Type 𝓥} (p : A → B)
                   → total-fibre p → A
base←total-fibre p (_ , a , _) = a

refl-fibre : ∀ {𝓤} {B : Type 𝓤}
               {𝓥} {A : Type 𝓥} (p : A → B)
               → A → total-fibre  p
refl-fibre p a = (p a , a , refl)

base≃total-fibre : ∀ {𝓤} {B : Type 𝓤}
                     {𝓥} {A : Type 𝓥} (p : A → B)
                   → total-fibre p ≃ A
base≃total-fibre {A = A} p = mk≃ (base←total-fibre p) (is-equiv←qiso f-qiso) where
  f-qiso : quasi-iso (base←total-fibre p)
  f-qiso .fst = refl-fibre p
  f-qiso .snd .fst (_ , a , refl) = refl
  f-qiso .snd .snd a = refl
}
% ```

}
