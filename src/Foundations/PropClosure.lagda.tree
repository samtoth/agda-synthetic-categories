\date{2025-06-21}
\title{Closure properties of propsitions}
\taxon{module}
\meta{module}{\startverb Foundations.PropClosure \stopverb}
\author{samueltoth}
\import{stt-macros}

%```agda
\agda{
module Foundations.PropClosure where

open import Foundations.Universes
open import Foundations.Functions
open import Foundations.FunctionInverses
open import Foundations.Singleton
open import Foundations.Sigma
open import Foundations.SigmaPath
open import Foundations.Identity
open import Foundations.DependentIdentity
open import Foundations.FunExt
open import Foundations.Lift
}
%```


\subtree[stt-006M]{
\taxon{theorem}
\title{Prop is closed under #{\Pi} and #{\Sigma}}

\p{Prop is closed under #{\Sigma} and, under the assumption
of [function extensionality](stt-0024), #{\Pi}.}

%```agda
\agda{
is-prop-Σ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : A → Type 𝓥}
            → is-prop A
            → (∀ a → is-prop (B a))
            → is-prop (Σ A B)
is-prop-Σ {B = B} sa sb (a , x) (b , y) = Σ-path→ (sa a b  , sb b _ y)

is-prop-Π : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : A → Type 𝓥}
            → FunExtω 𝓥
            → (∀ a → is-prop (B a))
            → is-prop (Π A B)
is-prop-Π FE pb x y = WithFunExtω.funext→ FE λ a → pb a (x a) (y a)


is-prop-ULift : ∀ {𝓤 𝓥} {A : Type 𝓤}
                → is-prop A
                → is-prop (ULift 𝓥 A)
is-prop-ULift prp (mk-lift a) (mk-lift b) = ap mk-lift (prp a b)
}
%```
}
