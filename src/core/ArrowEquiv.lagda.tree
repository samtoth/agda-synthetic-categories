\date{2025-06-03}
\title{Equivalences of arrows}
\author{samueltoth}
\import{stt-macros}
\taxon{module}
\meta{module}{\startverb core.ArrowEquiv \stopverb}

%```agda
\agda{
module core.ArrowEquiv where

open import ufAxioms
open import foundations.Prelude

open import core.Arrow
}
%```

\subtree[stt-004R]{
\taxon{definition}
\title{Arrow equivalences}

\p{A pair of arrows #{A \xrightarrow{f} B} and #{X \xrightarrow{g} Y} are said
to be equivalent if there exists an [arrow map](stt-003U) where both horizontal
morphisms are themselves equivalences.}

\quiver{
\begin{tikzcd}
	A && X \\
	\\
	B && Y
	\arrow["\sim", from=1-1, to=1-3]
	\arrow["f"', from=1-1, to=3-1]
	\arrow["g", from=1-3, to=3-3]
	\arrow["\sim"', from=3-1, to=3-3]
\end{tikzcd}
}

%```agda
\agda{
is-Arrow-equiv : ∀ {𝓤 𝓥 𝓦 𝓜} {A : Type 𝓤} {B : Type 𝓥} {X : Type 𝓦}
                       {Y : Type 𝓜} {f : A → B} {g : X → Y}
                     → Arrow-map f g → Type _
is-Arrow-equiv {f = f} {g} (mk-amap top bot comm)
  = is-equiv top × is-equiv bot
}
%```
}

\subtree[stt-004S]{
\taxon{theorem}
\title{Arrow equivalences preserve equivalences}

\p{If there is an [arrow equivalence](stt-004R) from #{A \xrightarrow{f} B} to
#{X \xrightarrow{g} Y}, then #{f} is an equivalence iff #{g} is.
}

\proof{This is a simple application of the [3-for-2](stt-003E) property of
equivalences.}

%```agda
\agda{
is-equiv←Arrow-equiv : ∀ {𝓤 𝓥 𝓦 𝓜} {A : Type 𝓤} {B : Type 𝓥} {X : Type 𝓦}
                       {Y : Type 𝓜} {f : A → B} {g : X → Y}
                       {F : Arrow-map f g}
                       → is-Arrow-equiv F
                       → is-equiv f → is-equiv g
is-equiv←Arrow-equiv {F = mk-amap top bot comm} (teq , beq) feq
  = 3-for-2~' comm teq (is-equiv-∘ beq feq)

is-equiv←Arrow-equiv⁻¹ : ∀ {𝓤 𝓥 𝓦 𝓜} {A : Type 𝓤} {B : Type 𝓥} {X : Type 𝓦}
                       {Y : Type 𝓜} {f : A → B} {g : X → Y}
                       {F : Arrow-map f g}
                       → is-Arrow-equiv F
                       → is-equiv g → is-equiv f
is-equiv←Arrow-equiv⁻¹ {F = mk-amap top bot comm} (teq , beq) geq
  = 3-for-2~ (comm ~⁻¹) beq (is-equiv-∘ geq teq)
}
%```
}
