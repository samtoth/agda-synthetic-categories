\date{2025-02-21}
\title{Homotopies of functions}
\taxon{definition}

\import{stt-macros}

% ```agda
\agda{
module foundations.Homotopy where

open import foundations.Functions
open import foundations.universe
open import foundations.Identity
}
% ```

\p{A homotopy between functions is a pointwise equality of functions.}

% ```agda
\agda{
infix 10 _~_
_~_ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : A → Type 𝓥} → (f g : (a : A) → B a) → Type (𝓤 ⊔ 𝓥)
f ~ g = ∀ a → f a ＝ g a

}
% ```

\subtree{
\taxon{theorem}
\title{Homotopies are 2-cells in the #{(\infty, 1)}-category of types}

\proof{
% ```agda
\agda{

infixl 25 _~∙_ 
_~∙_ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥} 
     → {f g : A → B} → f ~ g → {h : A → B} → g ~ h → f ~ h
(p ~∙ q) a = p a ∙ q a


~refl : ∀ {𝓤} {A : Type 𝓤} {f : A → A} → f ~ f
~refl a = refl

infix 20 _~⁻¹
_~⁻¹ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : A → Type 𝓥} → {f g : (a : A) → B a} → f ~ g → g ~ f 
(p ~⁻¹) a = sym (p a)


infixr 25 _⟩~∙⟨_
_⟩~∙⟨_ : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥} {f g : A → B} (p : f ~ g) {h : A → B} → {q : g ~ h} {r : g ~ h} → q ＝ r → p ~∙ q ＝ p ~∙ r
p ⟩~∙⟨ refl = refl

-- ~⟨⟩-syntax : ∀ {𝓤 𝓥} {A : Type 𝓤} {B : Type 𝓥} (f : A → B) {y z} → y ＝ z → x ＝ y → x ＝ z
-- ~⟨⟩-syntax x q p = p ∙ q

-- infixr 2 ＝⟨⟩-syntax
-- syntax ＝⟨⟩-syntax x q p = x ≡⟨ p ⟩ q

-- _＝⟨⟩_ : ∀ {𝓤} {A : Type 𝓤} (x : A) {y : A} → x ＝ y → x ＝ y
-- x ＝⟨⟩ p = p

-- _∎ : ∀ {ℓ} {A : Type ℓ} (x : A) → x ＝ x
-- x ∎ = refl

-- infixr 2 _＝⟨⟩_ 
-- infix  3 _∎

}
% ```
}
}

\p{We can define the whiskering of homotopies.}


% ```agda
\agda{

infixr 30 _◂_
_◂_ : ∀ {𝓤 𝓥 𝓦} {A : Type 𝓤} {B : Type 𝓥} {C : Type 𝓦}
    → (h : B → C) {f g : A → B} → f ~ g → h ∘ f ~ h ∘ g
(h ◂ p) x = ap h (p x)

infixl 31 _▸_
_▸_ : ∀ {𝓤 𝓥 𝓦} {A : Type 𝓤} {B : Type 𝓥} {C : Type 𝓦}
    → {f g : B → C} → f ~ g → (h : A → B) → f ∘ h ~ g ∘ h
(p ▸ h) x = p (h x)

}
% ```
