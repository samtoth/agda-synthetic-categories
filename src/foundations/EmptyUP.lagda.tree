\date{2025-04-17}
\taxon{module}
\title{Universal property of the [Empty Type](foundations.Empty)}
\import{stt-macros}

\meta{module}{\startverb foundations.EmptyUP \stopverb}

% ```agda
\agda{
open import foundations.Universes
open import foundations.FunExt

module foundations.EmptyUP (fe : FunExt-global) where

open import foundations.Empty
open import foundations.Unit
open import foundations.Identity
open import foundations.QuasiIsomorphism
open import foundations.CoherentIsomorphism
open import foundations.Sigma
open import foundations.Functions
open import foundations.EquivOfSingleton
open import foundations.Singleton
}
% ```

\subtree[stt-002X]{
\taxon{theorem}
\meta{defines}{\startverb ["unit-ev-is-equiv", "unit-UP≃"] \stopverb}

% ```agda
\agda{

K¡-sing-is-equiv : ∀ {𝓤} {A : Type 𝓤} → is-equiv (λ (_ : 𝟙) → ¡_ {A = A})
K¡-sing-is-equiv = is-equiv←qiso iso where
  iso : quasi-iso _
  iso .fst _ = _
  iso .snd .fst _ = refl
  iso .snd .snd f = WithFunExt-global.funext→ fe λ ()

∅-UP≃ : ∀ {𝓤} {A : Type 𝓤} → 𝟙 ≃ (∅ → A)
∅-UP≃ = mk≃ (λ _ → ¡_) K¡-sing-is-equiv
}
% ```

}
